import com.android.build.gradle.internal.dependency.ExtractAarTransform
import com.android.build.gradle.internal.dependency.AarTransform
import com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactType


apply plugin: 'java-library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.nekocode'
def artifactType = Attribute.of('artifactType', String)

dependencies {
    /*
      Android Jar
     */
    def targetSdkVersion = 26
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir')

    compileOnly files("${sdkDir}/platforms/android-${targetSdkVersion}/android.jar")


    /*
      Some Aars
     */
    registerTransform {
        from.attribute(artifactType, "aar")
        to.attribute(artifactType, "aarExtracted")
        artifactTransform(ExtractAarTransform)
    }

    registerTransform {
        from.attribute(artifactType, "aarExtracted")
        to.attribute(artifactType, "jar")
        artifactTransform(AarTransform) { params(ArtifactType.JAR) }
    }

    configurations {
        aar {
            attributes {
                attribute(artifactType, "jar")
            }
        }
    }

    aar "com.android.support:appcompat-v7:$SUPPORT_LIBS_VERSION"
    aar "com.android.support:recyclerview-v7:$SUPPORT_LIBS_VERSION"
}

task resolveAarDeps {
    def artifacts = configurations.aar.incoming.artifactView {
        attributes { it.attribute(artifactType, 'jar') }
        if (project.hasProperty("lenient")) {
            lenient(true)
        }
    }.artifacts

    artifacts.collect { artifact ->
        copy {
            println "__" + artifact.file.absolutePath
            from artifact.file
            rename { name -> "${artifact.id.componentIdentifier}.jar".replaceAll("[/:*?\"<>|]", "_") }
            into "${buildDir}/aars"
        }
    }

    dependencies {
        compileOnly fileTree(dir: "${buildDir}/aars", include: ['*.jar'])
    }
}
